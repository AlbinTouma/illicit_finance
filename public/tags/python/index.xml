<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Illicit Finance â€“ Python</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on Illicit Finance</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	  <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
      
        
      
    
    
    <item>
      <title>Unmasking networks on Telegram with Groupint</title>
      <link>http://localhost:1313/posts/groupint/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://localhost:1313/posts/groupint/</guid>
      <description>
        
        
        &lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;http://localhost:1313/images/groupintgraph.png&#34; title=&#34;Graph of networks on Telegram&#34; alt=&#34;graph&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;Graph of networks on Telegram&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;In recent years, Telegram has become popular for threat actors to engage in illicit activity. These actors range from simple fraudsters to cybercriminals and Russian military and intelligence personnel.&lt;/p&gt;
&lt;p&gt;Telegram is popular because of its end-to-end encrypted messaging, yet, the platform is not as anonymous as users believe. In fact, it&amp;rsquo;s a rich repository of information.&lt;/p&gt;
&lt;p&gt;Investigators can use this information to identify networks on Telegram and connect who&amp;rsquo;s talking to whom.&lt;/p&gt;
&lt;p&gt;Groupint is a recent OSINT tool investigators can use to invesigate networks on Telegram. I helped develop this tool as part of the R&amp;amp;D team at OSINT for Ukraine and in this post, we&amp;rsquo;ll explore how we built an app that lets users see who&amp;rsquo;s talking to whom on Telegram.&lt;/p&gt;
&lt;h2&gt;What is Groupint?&lt;span class=&#34;absolute -mt-20&#34; id=&#34;what-is-groupint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#what-is-groupint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Groupint is an app that enables investigators to scrape data from Telegram groups and connect users through an intuitive and visually appealing graph and user interface.&lt;/p&gt;
&lt;p&gt;This app is an open-source tool developed by OSINT for Ukraine, an independent non-profit foundation dedicated to using open-source intellgience to investigate war crimes in relation to the Russo-Ukrainian War.&lt;/p&gt;
&lt;p&gt;Groupint enables investigators to analyse networks within specific Telegram communities by scraping users and connecting who&amp;rsquo;s who in a graph database.&lt;/p&gt;
&lt;p&gt;To identify all the users and who they&amp;rsquo;re talking to, simply input the name of a group that you&amp;rsquo;re interested in and the app extracts all of the users and the groups that they are part of.&lt;/p&gt;
&lt;p&gt;Groupint enables network analysis and opens up a host of opportunities. Investigators can identify threat actors and their networks. They can also map trends in how illicit finance and threat actors interact with social media.&lt;/p&gt;
&lt;p&gt;You might wonder how it is possible to scrape and connect users between groups in an end-to-end encrypted app that supposedly provides you with unprecedented anonymity.&lt;/p&gt;
&lt;p&gt;The answer is simple; Telegram data is routinely sold in Russia.&lt;/p&gt;
&lt;h2&gt;Telesint&lt;span class=&#34;absolute -mt-20&#34; id=&#34;telesint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#telesint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;Groupint is powered by &lt;a href=&#34;https://telesint.dev/en/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Telesint&lt;/a&gt;, a database of over 3 million open Telegram chats and tens of thousands of private chats. Their bot is designed to search for people in open and closed Telegram groups.&lt;/p&gt;
&lt;p&gt;Though Telesint doesn&amp;rsquo;t collect &amp;ldquo;personal data&amp;rdquo;, the bot collects enough data points to link users from different groups.&lt;/p&gt;
&lt;p&gt;&lt;code&gt;id&lt;/code&gt; - user&amp;rsquo;s unique id&lt;/p&gt;
&lt;p&gt;&lt;code&gt;label&lt;/code&gt;- user&amp;rsquo;s alias&lt;/p&gt;
&lt;p&gt;&lt;code&gt;group&lt;/code&gt; - a list of Telegram groups that user is a member of&lt;/p&gt;
&lt;details class=&#34;last-of-type:mb-0 rounded-lg bg-neutral-50 dark:bg-neutral-800 p-2 mt-4 group&#34; &gt;
  &lt;summary class=&#34;flex items-center cursor-pointer select-none list-none p-1 rounded transition-colors hover:bg-gray-100 dark:hover:bg-neutral-800 before:mr-1 before:inline-block before:transition-transform before:content-[&#39;&#39;] dark:before:invert rtl:before:rotate-180 group-open:before:rotate-90&#34;&gt;
    &lt;strong class=&#34;text-lg&#34;&gt;Click me to reveal example of user data&lt;/strong&gt;
  &lt;/summary&gt;
  &lt;div class=&#34;p-2 overflow-hidden&#34;&gt;
    &lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;nt&#34;&gt;&amp;#34;data&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;{&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;94252564&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;andrey600&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;username&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;andrey600&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;nt&#34;&gt;&amp;#34;group&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;chat_massovka&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;silovikigroup&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;mesles&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;        &lt;span class=&#34;s2&#34;&gt;&amp;#34;komsomolka_ru&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;      &lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;    &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;  &lt;span class=&#34;p&#34;&gt;}&lt;/span&gt;&lt;span class=&#34;err&#34;&gt;,&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
  &lt;/div&gt;
&lt;/details&gt;
&lt;h2&gt;Architecture&lt;span class=&#34;absolute -mt-20&#34; id=&#34;architecture&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#architecture&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;p&gt;The architecture behind Groupint is straightforward. Our user logs in to Groupint, our streamlit app. The group that the user queries is communicated to Telesint using a python library called &lt;a href=&#34;https://docs.telethon.dev/en/stable/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Telethon&lt;/a&gt;. This library is crucial. We use it to connect to Telesint and scrape results.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;http://localhost:1313/images/architecture_groupint.png&#34; title=&#34;Groupint Architecture&#34; alt=&#34;architecture&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;Groupint Architecture&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;Results are stored in a Neo4j database, which we use to draw connections between individuals in different groups in a graph that outlines each network present on Telegram.&lt;/p&gt;
&lt;p&gt;&lt;figure&gt;
    &lt;img src=&#34;http://localhost:1313/images/groupintgraph.png&#34; title=&#34;Groupint Architecture&#34; alt=&#34;graph&#34; loading=&#34;lazy&#34; /&gt;
    &lt;figcaption&gt;Groupint Architecture&lt;/figcaption&gt;
  &lt;/figure&gt;&lt;/p&gt;
&lt;h2&gt;Get started&lt;span class=&#34;absolute -mt-20&#34; id=&#34;get-started&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#get-started&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h2&gt;&lt;h3&gt;Acquire API Credentials&lt;span class=&#34;absolute -mt-20&#34; id=&#34;acquire-api-credentials&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#acquire-api-credentials&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;When you log in to Groupint, you  set up a session with Telesint to access data on Telegram groups. Creating a session requires that you provide the phone number linked to your Telegram account and your Telegram API id and API hash.&lt;/p&gt;
&lt;p&gt;Acquire the API id and API hash from Telegram. You need to do the following:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sign up to &lt;a href=&#34;https://core.telegram.org/api/obtaining_api_id&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Telegram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Log in to your Telegram account &lt;a href=&#34;https://my.telegram.org&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;&lt;/a&gt;.&lt;/li&gt;
&lt;li&gt;Got to &amp;ldquo;API development tools&amp;rdquo; section and fill out the form.&lt;/li&gt;
&lt;li&gt;You will get your API id and API hash parameters required for user authorization.&lt;/li&gt;
&lt;li&gt;For the moment, each number can only have one api id connected to it.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Prerequisites&lt;span class=&#34;absolute -mt-20&#34; id=&#34;prerequisites&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#prerequisites&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Make sure that you have installed on your system:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Docker to compose the project&lt;/li&gt;
&lt;li&gt;Python 3.11&lt;/li&gt;
&lt;li&gt;Poetry to install python dependencies and set up your virtual environment&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Clone project and start containers&lt;span class=&#34;absolute -mt-20&#34; id=&#34;clone-project-and-start-containers&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#clone-project-and-start-containers&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;Clone the Groupint project from the OSINT for Ukraine Github accoun and run docker-compose or docker compose to set up the project .&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;git clone https://github.com/OSINT-for-Ukraine/groupint.git
cd groupint
docker-compose up&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;Set your login credentials. Create a secrets.toml file inside the streamlit folder and set your password.&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;# Create secrets file 
cd streamlit 
touch secrets.toml
# Set password variable
password = &amp;#34;xxxx&amp;#34;&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;h3&gt;Run a local instance of Groupint&lt;span class=&#34;absolute -mt-20&#34; id=&#34;run-a-local-instance-of-groupint&#34;&gt;&lt;/span&gt;
    &lt;a href=&#34;#run-a-local-instance-of-groupint&#34; class=&#34;subheading-anchor&#34; aria-label=&#34;Permalink for this section&#34;&gt;&lt;/a&gt;&lt;/h3&gt;&lt;p&gt;You can start your local instance of Groupint and run the app locally with the command:&lt;/p&gt;
&lt;div class=&#34;code-block relative mt-6 first:mt-0 group/code&#34;&gt;&lt;pre&gt;&lt;code&gt;streamlit run interface.py&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;opacity-0 transition group-hover/code:opacity-100 flex gap-1 absolute m-[11px] right-0 top-0&#34;&gt;
    &lt;button
      class=&#34;code-copy-btn group/copybtn transition-all active:opacity-50 bg-primary-700/5 border border-black/5 text-gray-600 hover:text-gray-900 rounded-md p-1.5 dark:bg-primary-300/10 dark:border-white/10 dark:text-gray-400 dark:hover:text-gray-50&#34;
      title=&#34;Copy code&#34;
    &gt;
      &lt;div class=&#34;group-[.copied]/copybtn:hidden copy-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
      &lt;div class=&#34;hidden group-[.copied]/copybtn:block success-icon pointer-events-none h-4 w-4&#34;&gt;&lt;/div&gt;
    &lt;/button&gt;
  &lt;/div&gt;
&lt;/div&gt;

      </description>
    </item>
    
  </channel>
</rss>
